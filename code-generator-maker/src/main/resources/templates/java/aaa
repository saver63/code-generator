package com.yupi.cli.command;


import com.yupi.model.DataModel;
import lombok.Data;
import picocli.CommandLine;
import picocli.CommandLine.Command;
import picocli.CommandLine.Option;


@Command(name = "generate", description = "生成代码",mixinStandardHelpOptions = true)
@Data
public class TestGroupCommandCommand implements Runnable {


    @Option(names = {"-k", "--needGit"}, description = "是否生成.gitignore文件", arity = "0..1",interactive = true,echo = true)
    private boolean needGit  = true ;

    @Option(names = {"-l", "--loop"}, description = "是否生成循环", arity = "0..1",interactive = true,echo = true)
    private boolean loop  = false ;

    static DataModel.MainTemplate mainTemplate =new DataModel.MainTemplate();

    @Override
    public void run() {
        System.out.println(needGit);
        System.out.println(loop);
        if (condition){
            System.out.println("输入核心模板配置：");
            CommandLine commandLine = new CommandLine(MainTemplateCommand.class);
            commandLine.execute("--author","-outputText");
        }
        System.out.println(mainTemplate);
        //赋值给DataModel
//        DataModel dataModel = new DataModel();
        //DataModel.mainTemplate = MainTemplate;
//        BeanUtil.copyProperties(this, dataModel);
//        MainGenerator.doGenerate(dataModel);
    }

    @Command(name = "mainTemplate", description = "用于生成核心模板文件")
    @Data
    public static class MainTemplateCommand implements Runnable{
        /**
         * 输出信息
         */
        @Option(names = {"-o", "--outputText"}, description = "输出信息", arity = "0..1",interactive = true,echo = true)
        private String outputText ;

        /**
         * 作者注释
         */
        @Option(names = {"-a", "--author"}, description = "作者注释", arity = "0..1",interactive = true,echo = true)
        private String author;

        @Override
        public void run() {
            //传递给外层参数
            mainTemplate.author = author;
            mainTemplate.outputText = outputText;
        }
    }

    public static void main(String[] args) {
        CommandLine commandLine = new CommandLine(TestGroupCommandCommand.class);
        args = new String[]{"-l","--needGit"};
        commandLine.execute(args);
    }

}
